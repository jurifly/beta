
'use server';
/**
 * @fileOverview An AI flow for generating legal documents from templates.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const DocumentGeneratorInputSchema = z.object({
  templateName: z.string().describe('The name of the legal template to generate.'),
  legalRegion: z.string().describe('The country/legal region for which to generate the document, e.g., "India", "USA".'),
  context: z.string().optional().describe("The specific situation or context for the document's use."),
  reason: z.string().optional().describe("The primary goal or reason for generating this document."),
});
export type DocumentGeneratorInput = z.infer<typeof DocumentGeneratorInputSchema>;

const DocumentGeneratorOutputSchema = z.object({
  title: z.string().describe('The title of the generated document.'),
  content: z.string().describe('The full text content of the generated legal document, formatted as plain text with line breaks.'),
});
export type DocumentGeneratorOutput = z.infer<typeof DocumentGeneratorOutputSchema>;

export async function generateDocument(input: DocumentGeneratorInput): Promise<DocumentGeneratorOutput> {
  return documentGeneratorFlow(input);
}

const prompt = ai.definePrompt({
  name: 'documentGeneratorPrompt',
  input: {schema: DocumentGeneratorInputSchema},
  output: {schema: DocumentGeneratorOutputSchema},
  prompt: `You are a world-class AI legal document drafting engine with the persona of a Senior Partner at a top-tier law firm, assisted by a meticulous junior editor AI. Your combined task is to generate a flawless, professional legal document tailored for {{legalRegion}}.

Template Name: "{{templateName}}"

{{#if context}}
**Context for Generation:** You MUST tailor the document to fit this specific situation.
- **Situation:** {{context}}
{{/if}}
{{#if reason}}
- **Goal:** {{reason}}
{{/if}}

**Your Process (You MUST follow these steps):**

1.  **Drafting (Senior Partner AI):** Based on the template and context, generate a complete, comprehensive, and legally sound document. Use standard placeholders like "[Party A Name]", "[Effective Date]", etc., where user input is needed. Structure the document with clear headings, clauses, and well-formed paragraphs. The terminology must be precise and appropriate for {{legalRegion}}.

2.  **CRITICAL QUALITY CONTROL (Meticulous Editor AI):** After the initial draft is complete, you must switch personas to that of a meticulous junior editor. Perform the following checks. This is not optional.
    *   **Proofread for Spelling & Grammar:** Read the entire document from start to finish. Correct ANY and ALL spelling mistakes and grammatical errors. There must be zero errors.
    *   **Second Proofread:** Read the entire document again, slowly, to catch any errors missed in the first pass.
    *   **Final Polish:** Read the document a third time to ensure it is clear, professional, and ready for legal use. The final output must be absolutely perfect.

3.  **Final Output:** The 'title' field in your output must be the document's main title. The 'content' must be the fully proofread and polished document text.

At the very end of the document content, you MUST add the following text on new lines, separated by a horizontal rule:
---
*Generated by Claari - Your AI Legal Co-pilot*

Return the response in the specified JSON format.
`,
});

const documentGeneratorFlow = ai.defineFlow(
  {
    name: 'documentGeneratorFlow',
    inputSchema: DocumentGeneratorInputSchema,
    outputSchema: DocumentGeneratorOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    if (!output) {
      throw new Error("The AI failed to generate the document. Please try again.");
    }
    return output;
  }
);
