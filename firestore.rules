
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can only read and write to their own profile document.
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }

    // Feedback can be created by any authenticated user.
    match /feedback/{feedbackId} {
      allow create: if request.auth != null;
    }

    // Transactions can be created by authenticated users for themselves.
    match /transactions/{transactionId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    
    // Counters collection for user signup index
    match /counters/userCounter {
      allow read, write: if request.auth != null;
    }

    // Invites can be created by a user for their own company.
    // They can be read by the founder or the invited CA.
    // They can be updated by the invited CA to accept.
    match /invites/{inviteId} {
      allow create: if request.auth != null && request.resource.data.founderId == request.auth.uid;
      allow read: if request.auth != null && (request.auth.uid == resource.data.founderId || request.auth.token.email == resource.data.caEmail);
      allow update: if request.auth != null && request.auth.token.email == resource.data.caEmail;
      allow delete: if request.auth != null && request.auth.uid == resource.data.founderId;
    }

    // Notifications and Chat History are subcollections of a user.
    match /users/{userId}/{subcollection}/{documentId} {
       allow read, write, create, delete: if request.auth != null && request.auth.uid == userId;
    }
  }
}
