rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
    // Users can only read and write their own profile data.
    match /users/{userId} {
      allow read, update, delete: if request.auth.uid == userId;
      allow create: if request.auth.uid == userId;
      
      // Users can manage their own subcollections.
      match /{subcollection}/{docId} {
        allow read, write: if request.auth.uid == userId;
      }
    }
    
    // Any authenticated user can update the user counter. This is necessary
    // for the signup transaction to work atomically. This is a safe operation.
    match /counters/userCounter {
      allow read, write: if request.auth != null;
    }

    // Founders can create invites. CAs can read their invites. CAs can delete invites they accept.
    match /invites/{inviteId} {
      allow read: if request.auth != null && request.auth.token.email == resource.data.caEmail;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.founderId;
      allow delete: if request.auth != null && request.auth.token.email == resource.data.caEmail;
    }

    // Users can create their own transactions, but cannot read others' or update/delete.
    match /transactions/{transactionId} {
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow read, update, delete: if false; // Only backend/admin should manage these.
    }
  }
}
