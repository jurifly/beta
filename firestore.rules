
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users can only read and write their own profile data.
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
      
      // Users can read/write their own subcollections.
      match /notifications/{notificationId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      match /chatHistory/{chatId} {
         allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // Anyone authenticated can create feedback.
    match /feedback/{feedbackId} {
      allow create: if request.auth != null;
    }

    // Anyone authenticated can create transactions.
    match /transactions/{transactionId} {
      allow create: if request.auth != null;
    }

    // Admins can manage the user counter.
    match /counters/userCounter {
      allow read, write: if false; // Secure by default, manage from backend/console
    }
    
    // Invite logic
    match /invites/{inviteId} {
      // Allow creation if user is authenticated
      allow create: if request.auth != null;
      
      // Allow the sender (founder) or receiver (caEmail) to read
      allow read: if request.auth != null && (request.auth.uid == resource.data.founderId || request.auth.token.email == resource.data.caEmail);
      
      // Allow the invited CA to accept the invite
      allow update: if request.auth != null && request.auth.token.email == resource.data.caEmail && request.resource.data.status == 'accepted';
      
      // Allow the founder who sent it to revoke it (delete)
      allow delete: if request.auth != null && request.auth.uid == resource.data.founderId;
    }

    // Access passes can be read by any authenticated user to check validity
    match /accessPasses/{passId} {
      allow read: if request.auth != null;
      // Write access should be restricted to admins (e.g., via console or admin SDK)
      allow write: if false;
    }
  }
}
